<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.up72.game.dao.UserMapper">
    <resultMap id="player" type="com.up72.game.dto.resp.Player">
        <result property="id" column="ID" />
        <result property="userId" column="USER_ID" />
        <result property="openId" column="OPEN_ID" />
        <result property="money" column="MONEY" />
        <result property="userAgree" column="USER_AGREE" />
    </resultMap>

    <sql id="info">
        ID,USER_ID,OPEN_ID,USER_NAME,USER_IMG,GENDER,MONEY,USER_AGREE
    </sql>


    <insert id="insert" parameterType="map">
        INSERT INTO GAME_USER(
            USER_ID,OPEN_ID,
            MONEY,USER_AGREE,LOGIN_STATUS,
            SIGN_UP_TIME,LAST_LOGIN_TIME,CID,USER_NAME,USER_IMG,GENDER
        )
        VALUES (
           #{userId},#{openId},
           #{money},#{userAgree},#{loginStatus},
           #{signUpTime},#{lastLoginTime},#{cId},#{userName},#{userImg},#{gender}
        )
    </insert>


    <update id="update">
        UPDATE GAME_USER SET
        USER_ID = #{userId},
        OPEN_ID = #{openId},
        MONEY = #{money},
        USER_AGREE = #{userAgree},
        LOGIN_STATUS = #{loginStatus},
        SIGN_UP_TIME = #{signUpTime},
        LAST_LOGIN_TIME = #{lastLoginTime}        
        WHERE ID = #{id}
    </update>

 	<update id="updateInfo">
        UPDATE GAME_USER SET
        USER_NAME = #{userName},
       	USER_IMG = #{userImg},
       	GENDER = #{gender}
        WHERE USER_ID = #{userId}
    </update>
    
    <update id="updateMoney">
        update GAME_USER set MONEY=#{money} where USER_ID = #{userId} and CID = #{cId}
    </update>

    
	<select id="findByOpenId" resultMap="player">
		SELECT 
		ID AS id,
		USER_ID AS userId,
		OPEN_ID AS openId,
		MONEY AS money,
		USER_AGREE AS userAgree
		FROM `GAME_USER` WHERE OPEN_ID = #{openId} and CID = #{cid}
	</select>
    
    
	<select id="isExistUserId" resultType="java.lang.Integer" resultMap="player">
        SELECT ID FROM GAME_USER WHERE USER_ID = #{userId}
    </select>



    <insert id="userFeedback">
        INSERT INTO GAME_FEEDBACK(USER_ID,CONTENT,TEL,CREATE_TIME)
        VALUES (#{userId},#{content},#{tel},#{createTime})
    </insert>


    <update id="updateUserAgree">
        update `GAME_USER` set USER_AGREE = 1 WHERE  USER_ID=#{userId} and CID = #{cId}
    </update>

    <select id="getNotice" resultType="java.lang.String">
        select CONTENT from  GAME_NOTICE where TYPE = 1 and CID = cid
    </select>

    <select id="getSystemMessage" resultType="com.up72.game.model.SystemMessage">
        select
        CREATE_TIME as createTime,
        CONTENT as content,
        USER_ID as userId
        from GAME_SYSTEM_MESSAGE
        limit #{start},#{limit}
    </select>
    
    <select id="getConectUs" resultType="java.lang.String">
        select CONTENT_US
        from GAME_SYSTEM_MESSAGE where STATE = 1
    </select>

    
    <insert id="insertPlayerMoneyRecord">
    	insert into gm_player_consumerecord(uId,money,type,createTime)
    	values(#{userId},#{money},#{type},#{createTime})
    </insert>
    
    <select id="getUserMoneyByUserId" resultType="java.lang.Integer">
    	select MONEY from GAME_USER where USER_ID=#{userId} and CID = #{cId} 
    </select>
	
	<update id="updateIpAndLastTime" parameterType="map">
		update GAME_USER set LAST_LOGIN_TIME = #{lastLoginTime},IP = #{ip} where OPEN_ID = #{openId} and CID = #{cId}
	</update>
	
	 <select id="findIpByUserId" resultType="java.lang.String" parameterType="map">
    	select IP from GAME_USER where USER_ID=#{userId} 
    </select>
    
    <select id="findTotalGameNum" parameterType="map" resultType="java.lang.Integer">
    	select count(ID) from GAME_ROOM where (USER_ID1 = #{userId} or USER_ID2 = #{userId} or
    	USER_ID3 = #{userId} or USER_ID4 = #{userId}) and CIRCLE_NUM = XIAO_JU
    </select>
</mapper>